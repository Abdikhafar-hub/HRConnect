const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://hrconnect-xq5c.onrender.com/api';

// Helper function to make API calls
async function apiCall(endpoint, options = {}) {
  const url = `${API_BASE_URL}${endpoint}`;
  
  const config = {
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
    ...options,
  };

  // Add auth token if available
  if (typeof window !== 'undefined') {
    const token = localStorage.getItem('token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
  }

  try {
    const response = await fetch(url, config);
    const data = await response.json();

    if (!response.ok) {
      throw new Error(data.message || 'Something went wrong');
    }

    return data;
  } catch (error) {
    console.error('API call failed:', error);
    throw error;
  }
}

// Rating API functions
export const ratingAPI = {
  // Get rating statistics for a user
  getStats: (userId) => apiCall(`/ratings/stats/${userId}`),
  
  // Get ratings received by the authenticated user
  getReceived: (page = 1, limit = 10) => 
    apiCall(`/ratings/received?page=${page}&limit=${limit}`),
  
  // Get ratings given by the authenticated user
  getGiven: (page = 1, limit = 10) => 
    apiCall(`/ratings/given?page=${page}&limit=${limit}`),
  
  // Get recent ratings for a user
  getRecent: (userId, limit = 3) => 
    apiCall(`/ratings/recent/${userId}?limit=${limit}`),
  
  // Create a new rating
  create: (ratingData) => 
    apiCall('/ratings', {
      method: 'POST',
      body: JSON.stringify(ratingData),
    }),
  
  // Vote helpful on a rating
  voteHelpful: (ratingId) => 
    apiCall(`/ratings/${ratingId}/helpful`, {
      method: 'POST',
    }),
};

// User API functions
export const userAPI = {
  // Get current user profile
  getProfile: () => apiCall('/auth/me'),
  
  // Update user profile
  updateProfile: (profileData) => 
    apiCall('/auth/updateprofile', {
      method: 'PUT',
      body: JSON.stringify(profileData),
    }),
};

// Job API functions
export const jobAPI = {
  // Get jobs
  getJobs: (params = {}) => {
    const queryString = new URLSearchParams(params).toString();
    return apiCall(`/jobs${queryString ? `?${queryString}` : ''}`);
  },
  
  // Get job by ID
  getJob: (jobId) => apiCall(`/jobs/${jobId}`),
  
  // Create job
  createJob: (jobData) => 
    apiCall('/jobs', {
      method: 'POST',
      body: JSON.stringify(jobData),
    }),
  
  // Update job
  updateJob: (jobId, jobData) => 
    apiCall(`/jobs/${jobId}`, {
      method: 'PUT',
      body: JSON.stringify(jobData),
    }),
  
  // Delete job
  deleteJob: (jobId) => 
    apiCall(`/jobs/${jobId}`, {
      method: 'DELETE',
    }),
};

// Application API functions
export const applicationAPI = {
  // Apply for a job
  apply: (applicationData) => 
    apiCall('/applications', {
      method: 'POST',
      body: JSON.stringify(applicationData),
    }),
  
  // Get employer applications
  getEmployerApplications: () => apiCall('/applications/employer'),
  
  // Get worker applications
  getWorkerApplications: () => apiCall('/applications/worker'),
  
  // Update application status
  updateStatus: (applicationId, statusData) => 
    apiCall(`/applications/${applicationId}`, {
      method: 'PUT',
      body: JSON.stringify(statusData),
    }),
};

const api = {
  ratingAPI,
  userAPI,
  jobAPI,
  applicationAPI,
  apiCall,
};

export default api; 